import React from "react";
import { Alert, Layout, Navbar } from "~/components";
import Head from "next/head";
import { ClickHere } from "../login/LoginPage";
import styles from "./RegisterPage.module.scss";
import DefaultButton from "~/components/button/DefaultButton";
import DefaultInputText from "~/components/input/DefaultInputText";
import { userRegister } from "./utils/api";
import { useFormik } from "formik";
import * as Yup from "yup";
import { LOGIN_PAGE } from "~/constants/page";

const registerSchema = Yup.object().shape({
  email: Yup.string()
    .email("Wrong email format")
    .min(5, "Minimum 5 character")
    .max(50, "Maximum 50 character")
    .required("Email is required"),
  name: Yup.string()
    .min(5, "Minimum 5 character")
    .max(50, "Maximum 50 character")
    .required("Name is required"),
  password: Yup.string()
    .min(5, "Minimum 5 character")
    .max(50, "Maximum 50 character")
    .required("Password is required"),
  password_confirmation: Yup.string()
    .min(5, "Minimum 5 character")
    .max(50, "Maximum 50 character")
    .required("Password is required"),
});

const initialValues = {
  name: "",
  email: "",
  password: "",
  password_confirmation: "",
};

function RegisterPage() {
  const formik = useFormik({
    initialValues,
    validationSchema: registerSchema,
    onSubmit: (values, { setStatus, setSubmitting }) => {
      setSubmitting(true);
      userRegister(values)
        .then(() => {
          setSubmitting(false);
          setStatus({
            state: true,
            message: "Pendaftaran berhasil, silahkan login.",
          });
        })
        .catch((error) => {
          const errorList = error.response.data.error;
          const errorListArray = [];
          for (const property in errorList) {
            errorListArray.push(errorList[property]);
          }
          setStatus({
            state: false,
            message: errorListArray[0][0],
          });
          setSubmitting(false);
        });
    },
  });

  return (
    <>
      <Head>
        <title>Register | Lofiators</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <Navbar />

      <Layout>
        <section className={styles.registerPage}>
          <div className='md:w-2/4 w-full md:px-0 px-4'>
            <h4 className='title-auth'>Register</h4>

            <Alert
              show={formik.status === undefined ? false : true}
              message={formik.status?.message}
              type={formik.status?.state ? "success" : "danger"}
            />
            <form onSubmit={formik.handleSubmit}>
              <div className='mt-4'>
                <DefaultInputText
                  label='Nama Lengkap'
                  id='name'
                  type='text'
                  showError={formik.touched.name}
                  messageError={formik.errors.name}
                  placeholder='Nama Lengkap'
                  {...formik.getFieldProps("name")}
                />
                <DefaultInputText
                  label='Email'
                  id='email'
                  type='email'
                  showError={formik.touched.email}
                  messageError={formik.errors.email}
                  placeholder='user@mail.com'
                  {...formik.getFieldProps("email")}
                />

                <DefaultInputText
                  label='Password'
                  id='password'
                  type='password'
                  placeholder='*******'
                  showError={formik.touched.password}
                  messageError={formik.errors.password}
                  {...formik.getFieldProps("password")}
                />
                <DefaultInputText
                  label='Konfirmasi Password'
                  id='konfirmasi-password'
                  type='password'
                  placeholder='*******'
                  showError={formik.touched.password_confirmation}
                  messageError={formik.errors.password_confirmation}
                  {...formik.getFieldProps("password_confirmation")}
                />
              </div>

              <div className='mt-6'>
                <DefaultButton
                  label='Daftar'
                  type='submit'
                  disabled={formik.isSubmitting || !formik.isValid}
                  className='block w-full py-2 text-base'
                />
                <p className='text-xs text-gray-400 mt-3 font-light'>
                  Dengan melanjutkan, Anda memahami dan menyetujui penggunaan
                  Kami atas informasi yang Anda sampaikan sesuai dengan
                  ketentuan Kebijakan Privasi.
                </p>
              </div>
            </form>

            <ClickHere label='Sudah punya akun?' href={LOGIN_PAGE} />
          </div>
        </section>
      </Layout>
    </>
  );
}

export default RegisterPage;
